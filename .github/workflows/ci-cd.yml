name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ –∏ —Å–±–æ—Ä–∫–∞
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Build application
      run: npm run build
      
    - name: Test build output
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed: .next directory not found"
          exit 1
        fi
        echo "Build successful!"

  # –î–µ–ø–ª–æ–π –Ω–∞ VDS —Å–µ—Ä–≤–µ—Ä (—Ç–æ–ª—å–∫–æ —Å main –≤–µ—Ç–∫–∏)
  deploy:
    name: Deploy to VDS
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/
        cp package*.json deploy/
        cp next.config.ts deploy/
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        cat > deploy/start.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "üöÄ Starting deployment process..."
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Ç–æ–ª—å–∫–æ production)
        npm ci --only=production
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
        pm2 stop race-time-front || true
        pm2 delete race-time-front || true
        
        # –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ
        pm2 start npm --name "race-time-front" -- start
        pm2 save
        
        echo "‚úÖ Deployment completed successfully!"
        EOF
        
        chmod +x deploy/start.sh
        
    - name: Deploy to VDS Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          mkdir -p ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}
          
          # Backup –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
          if [ -d "${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/current" ]; then
            mv ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/current ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/backup-$(date +%Y%m%d-%H%M%S) || true
          fi
          
          # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          mkdir -p ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/current
          
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "deploy/*"
        target: ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/current/
        strip_components: 1
        
    - name: Start application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}/current
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2 –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
          if ! command -v pm2 &> /dev/null; then
            npm install -g pm2
          fi
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è
          chmod +x start.sh
          ./start.sh
          
    - name: Cleanup old backups
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –±—ç–∫–∞–ø–∞
          cd ${{ secrets.DEPLOY_PATH || '/var/www/race-time-front' }}
          ls -t backup-* 2>/dev/null | tail -n +4 | xargs rm -rf {} + 2>/dev/null || true
          
    - name: Health check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
          sleep 10
          if pm2 show race-time-front | grep -q "online"; then
            echo "‚úÖ Application is running successfully!"
            pm2 logs race-time-front --lines 10
          else
            echo "‚ùå Application failed to start!"
            pm2 logs race-time-front --lines 20
            exit 1
          fi